generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  published    Boolean        @default(false)
  authorId     Int // forign key
  author       User         @relation(fields: [authorId], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  postCategory PostCategory[] // many to many relation

  @@map("posts")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String
  age Int @default(0)
  role     UserRoll @default(user)
  profile  Profile? // one to one relation
  post     Post[] // one to many relation
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])

  @@map("profiles")
}

enum UserRoll {
  user
  admin
}

// intermediate table
model PostCategory {
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId]) // composit key 
  @@map("post_category")
}

model Category {
  id             Int            @id @default(autoincrement())
  name           String
  postCategories PostCategory[] // many to many relation

  @@map("categories")
}
